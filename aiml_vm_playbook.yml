---
- name: playbook for proxmox hipervisior and VM for AM/ML Edge Platform
  hosts: proxmox_ve
#  user: ubuntu
#  become: yes
#  connection: ssh
#  debuger: on_failed
#  gather_facs: yes
  tasks:
   - name: Change GRUB config
     lineinfile:
      dest='"/etc/default/grub"'
      regexp='GRUB_CMDLINE_LINUX_DEFAULT="(.*)"'
      line='GRUB_CMDLINE_LINUX_DEFAULT="\1 quiet intel_iommu=on efifb=off"'
      backrefs=yes
   - name: Update GRUB
     ansible.builtin.command: update grub
   - name: Add the Nvidia drivers to the blacklist to prevent them from being loaded by Proxmox
     ansible.builtin.command: "echo {{ item.driver }} >> /etc/modprobe.d/blacklist.conf"
     with_items:
       - driver: "blacklist nvidia"
       - driver: "blacklist nouveau"
       - driver: "blacklist radeon"
   - name: get blacklist.conf to variable
     ansible.builtin.command: cat /etc/modprobe.d/blacklist.conf
     register: blacklist
   - name: Print blacklist.conf
     ansible.builtin.debug:
       msg: "{{blacklist}}"
   - name: Update initramfs
     ansible.builtin.command: update-initramfs -u
   - name: Add Virtual Function IO (vfio) kernel modules to load at boot time
     command: "echo {{ item.variable }} >> /etc/modules"
     with_items:
       - variable: "vfio"
       - variable: "vfio_iommu_type1"
       - variable: "vfio_pci"
       - variable: "vfio_virqfd"
   - name: Get GeForce RTX address and IDs
     ansible.builtin.command:  lspci -n -s 01:00
     register: lspci_output
     set_fact: get lspci list
     lspci_list: "{{ lspci_output.stdout | regex_search('[A-Za-z0-9]+:[A-Za-z0-9]')}}"
     set_fact: lspci_list to string
     lspci_string: "{{ lspci_list | join(', ') }}"
   - name: Assign the GeForce RTX to the Virtual Function IO (vfio)
     ansible.builtin.command: 'echo "options vfio-pci ids={{item.ids}}" > /etc/modprobe.d/vfio.conf'
     with_items:
       - ids: lspci_string
   - name: enable IOMMU interrupt remapping
     ansible.builtin.command: echo "options vfio_iommu_type1 allow_unsafe_interrupts=1" > /etc/modprobe.d/iommu_unsafe_interrupts.conf
   - name: Reboot
     ansible.builtin.reboot:


